__author__ = "Jag_k"
import time

from VKBotAudioMessage import *
from VKBotAPI import *
from VKBotNote import *
from color import color
from vk.exceptions import VkException
# from speaker import Speak, KEY

print('lib import done')

libVersion = '0.1.7'

note = [Note("–ó–∞–º–µ—Ç–∫–∏"), Note("Test", [['lol', False]])]
noteCount = 1
admins = [173996641, 316261212]
tryId = [173996641, 316261212, 366459937, 366930057, 22366930057, 252168745, 443841821]
edit_table = [173996641, 12306618]

helpcmd = '–£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å: –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø—Ä–∞–≤–∫–µ, –≤—ã–ø–æ–ª–Ω–∏–≤ –∑–∞–ø—Ä–æ—Å "/? {–∫–æ–º–∞–Ω–¥–∞}" –∏–ª–∏ —Å–¥–µ–ª–∞–≤ –∑–∞–ø—Ä–æ—Å "/?" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ–π —Å–ø—Ä–∞–≤–∫–∏ –æ –∫–æ–º–∞–Ω–¥–∞—Ö.'


cmds = { # ['–û–ø–∏—Å–∞–Ω–∏–µ','–ê—Ä–≥—É–º–µ–Ω—Ç—ã (–ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ None)','–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —É—Ä–æ–≤–Ω—è –ê–¥–∏–º–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Ç–æ 'admin') (–ï—Å–ª–∏ None, —Ç–æ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∏–º–µ—á–∞–Ω–∏—è)']
    '/?': ['–ü–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', '{–Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã (/)}', '–ø—Ä–∏ –≤–≤–æ–¥–µ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥.', None],
    # '/say': ['–ì–æ–≤–æ—Ä–∏—Ç —Ñ—Ä–∞–∑—É —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–º', '{—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è}', None],
    '/show': ['–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫—É—é-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ —Å–ø–∏—Å–æ–∫ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π –∏–ª–∏ –¢–æ–∫–µ–Ω "–í—Å–µ–≤–ª–∞—Å—Ç—å—è")','token, admin_list, try_id', 'admin'],
    '/stop': ['–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞', None, '–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ [id173996641|–°–∏–≥–∏–∑–º—É–Ω–¥—É –ö–æ–Ω–æ–Ω—É] –∏ –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª—é–¥—è–º'],
    # '/add': ['–ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-–ª–∏–±–æ –∫—É–¥–∞ –ª–∏–±–æ (–Ω–∞–ø—Ä–º–µ—Ä –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫ –±–æ—Ç—É, –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –∫ –±–µ—Å–µ–¥–µ –∏–ª–∏ –¥–æ–±–∞—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π)','admin {id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è} –∏ people {id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}', None],
    '/version': ['–í—ã–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä–∞ –≤–µ—Ä—Å–∏–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –±–æ—Ç–∞ –∏ –∫–æ–¥–∏—Ä–æ–≤—â–∏–∫–∞', None, None],
    # '/sleep': ['–í–≤–æ–¥–∏—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º —Å–Ω–∞', '{—Å–µ–∫—É–Ω–¥—ã}, {–º–∏–Ω—É—Ç—ã}, {—á–∞—Å—ã}', 'admin'],
    '/id': ['–í—ã–≤–æ–¥–∏—Ç –í–∞—à id', None, None],
    '/note': ['–í—ã–≤–æ–¥–∏—Ç –∑–∞–º–µ—Ç–∫–∏', '–≤—ã–∑–æ–≤ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–º–µ—Ç–∫–∏, add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É, edit - –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–º–µ—Ç–∫—É, del - —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É',None]
}
'''
#–§—É–Ω–∫—Ü–∏–∏

#Table

def post(message, groupId = id_group):
    return api.wall.post(**{'owner_id': groupId, 'from_group': 1, 'message':message})

def editPost(message, post_id, groupId = id_group):
    try: api.wall.edit(**{'owner_id':groupId,'post_id':post_id,'message':message})
    except BaseException: return post(message, groupId)
    return {'post_id': post_id}

def lastPost(Type = 'table', date = False, groupId = id_group): #Type == 'table' or 'hw'
    if not date:
        post = api.wall.search(**{'owner_id':groupId,'query':Type+' ','count':1,'extended':0})
        if len(post) != 1:
            return post[1]
    else:
        post = api.wall.search(**{'owner_id':groupId,'query':Type+' '+date,'count':1,'extended':0})
        if len(post) != 1:
            return post[1]
    return [0]

def table_and_hw(table, hw): pass

#end Table
'''


def sayBot(text, noBot):
    if noBot:
        return text
    return '[id173996641|üê© JksBot]: ' + text


def sendMe(text, noBot=False):
    time.sleep(0.25)
    api.messages.send(**{'domain': 'jag_k58', 'message': sayBot(text, noBot)})


def sendBack(text, message, noBot=False, attachment='', fwd=[]):
    if message['title'] == '' and str(message['uid'])[0] == '-':
        api.messages.send(**{'peer_id': message['uid'], 'message': sayBot(text, noBot), 'attachment': attachment})
    elif message['title'] == '':
        api.messages.send(**{'user_id': message['uid'], 'message': sayBot(text, noBot), 'attachment': attachment})
    elif message['title'] != '':
        api.messages.send(**{'chat_id': message['chat_id'], 'message': sayBot(text, noBot), 'attachment': attachment})


def relevant(message): return '[id'+str(message['uid'])+'|'+api.users.get(**{'user_ids':message['uid']})[0]['first_name']+'], '


def errorTime(TimeDate): return '–í—Ä–µ–º—è –∏ –¥–∞—Ç–∞ –æ—à–∏–±–∫–∏: '+TimeDate


def commandHelp(c, full=False):  # ['–û–ø–∏—Å–∞–Ω–∏–µ','–ê—Ä–≥—É–º–µ–Ω—Ç—ã (–ï—Å–ª–∏ None, —Ç–æ )','–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —É—Ä–æ–≤–Ω—è –ê–¥–∏–º–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Ç–æ True) (–ï—Å–ª–∏ False, —Ç–æ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∏–º–µ—á–∞–Ω–∏—è)']
    if not full:
        cmd = cmds['/' + c]
        txt = '‚Ä¢ /' + c + ': ' + cmd[0]

    else:
        cmd = cmds[c]
        txt = '‚Ä¢ ' + c + ': ' + cmd[0]

    if cmd[1] is None:
        txt += '\nüìù –ù–µ –∏–º–µ–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤'

    else:
        txt += '\nüìù –ò–º–µ–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã: '+cmd[1]

    if cmd[2] == 'admin':
        return txt+'\n‚ö† –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã!'

    elif cmd[2] is None:
        return txt

    return txt+'\n‚ö† –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: '+cmd[2]


def command(cmd, message):  # 0 == break, 1 == 'complete', 2 == 'version', 3 == 'result'
    import commands._edit_param as edit_param
    edit_param.edit(cmd=cmd, message=message)

    if cmd[0] == 'show' and message['uid'] in admins:  # /show
        if len(cmd) > 1:
            if cmd[1] == 'token':
                sendBack('Token: '+token, message)
            else:
                sendBack('–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã.\n'+helpcmd, message)
        else:
            sendBack("""–í—ã–∑–æ–≤–µ—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–æ —É–∂–µ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º.
            –ï—Å–ª–∏ –í—ã –∑–∞–±—ã–ª–∏ –∏–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã, —Ç–æ –Ω–∞–ø–∏—à–µ—Ç–µ /? show""", message)
        
    elif cmd[0] == 'stop' and message['uid'] in admins:  # /stop
        return 'break'
    
    elif cmd[0] == 'version':
        return 'version'  # /version
    
    elif cmd[0] == 'restart':
        return 'restart'  # /restart
    
    # elif cmd[0] == 'cangelog': sendBack(history)
    
    elif cmd[0] == 'id':
        return sendBack(relevant(message)+'–í–∞—à id: '+str(message['uid']), message)  # /id

    elif cmd[0] == 'connect':
        sendBack("The connection is successful!", message)

    elif cmd[0] == 'say':
        sendBack('', message, noBot=True, attachment=audio_message(*cmd[1:], 1))

    elif cmd[0] == 'note':
        if len(cmd) == 1:
            return '@!'+note[noteCount].name+':\n' + '\n'.join(note[noteCount].textNote())
        else:
            if cmd[1] == 'add':
                note[noteCount].addNote(' '.join(cmd[2:]))
                return '@!–ó–∞–º–µ—Ç–∫–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ "{}"!'.format(str(len(cmd) + 1),
                                                                                        note[noteCount])
            elif cmd[1] == 'edit' and len(cmd) > 2:
                if cmd[2].isdigit():
                    if cmd[3].lower() == '*–∑–∞–≤–µ—Ä—à–µ–Ω–æ*' or cmd[3].lower() == '*done*':
                        note[noteCount].editNote(int(cmd[2]), done=True,
                                                 text=(' '.join(cmd[4:]) if len(cmd) > 3 else None))
                    else:
                        note[noteCount].editNote(int(cmd[2]), text=(' '.join(cmd[4:]) if len(cmd) > 3 else None))
                    return '@!–ó–∞–º–µ—Ç–∫–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {} –∏–∑ "{}" –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!'.format(cmd[2], note[noteCount])
            elif cmd[1] == 'del' and len(cmd) == 3:
                if cmd[2].isdigit():
                    return '@!–ó–∞–º–µ—Ç–∫–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {} –∏–∑ "{}" –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!'.format(cmd[2], note[noteCount])\
                        if note[noteCount].delNote(int(cmd[2])) else \
                        note[noteCount].name + ':\n' + '\n'.join(note[noteCount].textNote())
            elif cmd[1] == 'list':
                return "@!–°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫:\n" + "\n ".join(map(lambda x: str(note.index(x) + 1) + ') ' + str(x), note))
            elif cmd[1] == 'create' and len(cmd) > 2:
                note.append(Note(cmd[2:]))

            else:
                return '@!' + note[noteCount].name + ':\n' + '\n'.join(note[noteCount].textNote())

    elif cmd[0] == '?':  # /?
        if len(cmd) == 2:
            if '/'+cmd[1] in cmds:
                sendBack(commandHelp(cmd[1]), message)
            else:
                sendBack('–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.\n'+helpcmd, message)
        elif len(cmd) > 2:
            sendBack('–ù–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞', message)
        else:
            func = '\n\n'.join(sorted([commandHelp(i, full=True) for i in cmds.keys()]))
            sendBack(func, message)
        
    elif cmd[0] == 'add':  # /add
        if cmd[1]:
            if cmd[1] == 'admin':
                if cmd[2]:
                    if cmd[2].isdigit():
                        admins.append(int(cmd[2]))
                    else:
                        sendBack('Id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —á–∏—Å–µ–ª.', message)
                else:
                    sendBack('–í–≤–µ–¥–∏—Ç–µ id –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –±–æ—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏–≤ –∫–æ–º–∞–Ω–¥—É –ø–æ —Ç–∏–ø—É "/add admin {id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}".', message)
        else:
            sendBack(helpcmd, message)
    
    elif cmd[0] == 'crack' and message['uid'] in admins:
        sendBack(kok, message)

    elif cmd[0] == 'wop':
        from commands.cmd_wop import cmd_wop
        cmd_wop()

    else:
        sendBack('–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n'+helpcmd, message)
    return 'complete'
print('lib loaded')
